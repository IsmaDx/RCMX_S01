//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace S1rcmxAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ShoukoEntities : DbContext
    {
        public ShoukoEntities()
            : base("name=ShoukoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TransactSessionId> TransactSessionId { get; set; }
        public virtual DbSet<Img> Img { get; set; }
        public virtual DbSet<Logger> Logger { get; set; }
        public virtual DbSet<PswConfirma> PswConfirma { get; set; }
        public virtual DbSet<Cliento> Cliento { get; set; }
        public virtual DbSet<ClientoUsuario> ClientoUsuario { get; set; }
    
        public virtual int RegAccess(string user, string pass, Nullable<System.DateTime> fecReg)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var fecRegParameter = fecReg.HasValue ?
                new ObjectParameter("FecReg", fecReg) :
                new ObjectParameter("FecReg", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegAccess", userParameter, passParameter, fecRegParameter);
        }
    
        public virtual int RegNewCliente(string p_Rfc, string p_NomCli, string p_CveRegimen, string p_CalCli, string p_NinCli, string p_NexCli, string p_ColCli, string p_EstCli, string p_CodCli, string p_CveUsoCFDICli, string p_FechaRegistro, Nullable<int> p_Saldo, string p_Correo)
        {
            var p_RfcParameter = p_Rfc != null ?
                new ObjectParameter("p_Rfc", p_Rfc) :
                new ObjectParameter("p_Rfc", typeof(string));
    
            var p_NomCliParameter = p_NomCli != null ?
                new ObjectParameter("p_NomCli", p_NomCli) :
                new ObjectParameter("p_NomCli", typeof(string));
    
            var p_CveRegimenParameter = p_CveRegimen != null ?
                new ObjectParameter("p_CveRegimen", p_CveRegimen) :
                new ObjectParameter("p_CveRegimen", typeof(string));
    
            var p_CalCliParameter = p_CalCli != null ?
                new ObjectParameter("p_CalCli", p_CalCli) :
                new ObjectParameter("p_CalCli", typeof(string));
    
            var p_NinCliParameter = p_NinCli != null ?
                new ObjectParameter("p_NinCli", p_NinCli) :
                new ObjectParameter("p_NinCli", typeof(string));
    
            var p_NexCliParameter = p_NexCli != null ?
                new ObjectParameter("p_NexCli", p_NexCli) :
                new ObjectParameter("p_NexCli", typeof(string));
    
            var p_ColCliParameter = p_ColCli != null ?
                new ObjectParameter("p_ColCli", p_ColCli) :
                new ObjectParameter("p_ColCli", typeof(string));
    
            var p_EstCliParameter = p_EstCli != null ?
                new ObjectParameter("p_EstCli", p_EstCli) :
                new ObjectParameter("p_EstCli", typeof(string));
    
            var p_CodCliParameter = p_CodCli != null ?
                new ObjectParameter("p_CodCli", p_CodCli) :
                new ObjectParameter("p_CodCli", typeof(string));
    
            var p_CveUsoCFDICliParameter = p_CveUsoCFDICli != null ?
                new ObjectParameter("p_CveUsoCFDICli", p_CveUsoCFDICli) :
                new ObjectParameter("p_CveUsoCFDICli", typeof(string));
    
            var p_FechaRegistroParameter = p_FechaRegistro != null ?
                new ObjectParameter("p_FechaRegistro", p_FechaRegistro) :
                new ObjectParameter("p_FechaRegistro", typeof(string));
    
            var p_SaldoParameter = p_Saldo.HasValue ?
                new ObjectParameter("p_Saldo", p_Saldo) :
                new ObjectParameter("p_Saldo", typeof(int));
    
            var p_CorreoParameter = p_Correo != null ?
                new ObjectParameter("p_Correo", p_Correo) :
                new ObjectParameter("p_Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegNewCliente", p_RfcParameter, p_NomCliParameter, p_CveRegimenParameter, p_CalCliParameter, p_NinCliParameter, p_NexCliParameter, p_ColCliParameter, p_EstCliParameter, p_CodCliParameter, p_CveUsoCFDICliParameter, p_FechaRegistroParameter, p_SaldoParameter, p_CorreoParameter);
        }
    }
}
